%
%    This file was auto-generated by ACADO Code Generation Tool.
%    
%    ACADO Code Generation tool is a sub-package of ACADO toolkit --
%    A Toolkit for Automatic Control and Dynamic Optimization.
%    Copyright (C) 2008-2013 by Boris Houska, Hans Joachim Ferreau,
%    Milan Vukov, Rien Quirynen, KU Leuven.
%    Developed within the Optimization in Engineering Center (OPTEC)
%    under supervision of Moritz Diehl. All rights reserved.
%    
%    ACADO Toolkit is free software; you can redistribute it and/or
%    modify it under the terms of the GNU Lesser General Public
%    License as published by the Free Software Foundation; either
%    version 3 of the License, or (at your option) any later version.
%    
%    ACADO Toolkit is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%    Lesser General Public License for more details.
%    
%    You should have received a copy of the GNU Lesser General Public
%    License along with ACADO Toolkit; if not, write to the Free Software
%    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
%    

function make_acado_model( name, extern )

	% Output file name, and also function name
	if (nargin > 0)
		fileOut = name;
	else
		fileOut = 'acado_rhs';
	end;
		
	% Root folder of code generation
	CGRoot = '.';	
		
	% Auto-generated files
	CGSources = [ ...
		'rhs.c ' ...
		'integrator.c ' ...
		];
	if (nargin > 1)
		CGSources = [CGSources extern];
	end
		
	% Adding additional linker flags for Linux
	ldFlags = '';
	if (isunix() && ~ismac())
		ldFlags = '-lrt';
	end;

	% Recipe for compilation
	CGRecipe = [ ...
		'mex -O' ...
		' -I. -I''CGRoot''' ...
		' ldFlags' ...
		' -D__MATLAB__ -O CGSources -output %s.%s' ...
		];

% Compilation
CGSources = regexprep(CGSources, 'CGRoot', CGRoot);

CGRecipe = regexprep(CGRecipe, 'CGRoot', CGRoot);
CGRecipe = regexprep(CGRecipe, 'CGSources', CGSources);
CGRecipe = regexprep(CGRecipe, 'ldFlags', ldFlags);

% disp( sprintf( CGRecipe, fileOut, mexext ) ); 
fprintf( 'compiling... ' );
eval( sprintf(CGRecipe, fileOut, mexext) );
fprintf( ['done! --> ' fileOut '.' mexext '\n'] );
